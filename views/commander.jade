doctype html
html
  head
    title Mission Control
    link(rel="stylesheet" href="/css/font-awesome.min.css")
    link(rel="stylesheet" href="/css/styles.css")
    script(src='/socket.io/socket.io.js')
    script(src='/jquery/jquery.js')
  body(class=typeof cssBody === 'undefined' ? 'property-page' : '')
    ul#commands
    script.
      var id = "#{station}";
      var socket = io();

      socket.on('connect', function() {
        socket.emit('commanderJoined', {'station': id})
      });

      socket.on("station"+id, function(data){
        var msg = data.msg;
        var type = data.type;
        if (type == "hint") {
          $('#commands').append($('<li class="hint">').text(msg));  
        } else if (type == "command") {
          $('li').removeClass('current');
          $('#commands').append($('<li class="error current">').text(msg));
          $('li.current').append('<div class="progressBar"><div></div></div>');
          progress(data.timeLeft, data.timeLeft);
        } else {
          $('#commands').append($('<li>').text(msg));
        }
      });

      socket.on("command", function(msg){
        switch (msg) {
          case 'reset':
            $('#commands').empty();
            break;
          default:
            $('#commands').append($('<li>').text(msg));
        }
      });
      
      function progress(timeleft, timetotal) {
        var progressBarWidth = timeleft * $('.progressBar').width() / timetotal;
        $('li.current > .progressBar > div').css( 'width', progressBarWidth );

        if(timeleft > 0) {
          setTimeout(function() {
            progress(timeleft - 1, timetotal);
          }, 1000);
        } else {
          $('.progressBar').remove();
        }
      };